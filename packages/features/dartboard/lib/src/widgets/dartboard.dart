import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:flutter_inappwebview/flutter_inappwebview.dart';

const dart =
    "<!doctype html><html lang=en><meta charset=UTF-8><meta content="width=device-width,initial-scale=1" name=viewport><title>Dartboard</title><style>@font-face{font-family:Poppins;font-style:normal;font-weight:400;src:url(poppins.woff2) format('woff2');unicode-range:U+0900-097F,U+1CD0-1CF9,U+200C-200D,U+20A8,U+20B9,U+25CC,U+A830-A839,U+A8E0-A8FF}@font-face{font-family:Poppins;font-style:normal;font-weight:400;src:url(poppins.woff2) format('woff2');unicode-range:U+0100-02AF,U+0304,U+0308,U+0329,U+1E00-1E9F,U+1EF2-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:Poppins;font-style:normal;font-weight:400;src:url(poppins.woff2) format('woff2');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}body{background-color:#3c46a7}#wrapper{box-sizing:unset!important}.container{display:flex;justify-content:center;align-items:center;height:100vh}.input-row{display:flex;justify-content:center;align-items:center}span{font-family:Poppins;font-weight:700;font-size:36px;text-align:center;color:#fff;padding-bottom:20px}</style><div class=container><div class=centered-div><div class=input-row><span id=dartboardInput>T20 T20 T20</span></div><div id=wrapper></div></div></div><script>!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t=t||self).window=t.window||{})}(this,(function(t){"use strict";function e(t,e){t.prototype=Object.create(e.prototype),(t.prototype.constructor=t).__proto__=e}function r(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function i(t){return"string"==typeof t}function n(t){return"function"==typeof t}function s(t){return"number"==typeof t}function a(t){return void 0===t}function o(t){return"object"==typeof t}function u(t){return!1!==t}function h(){return"undefined"!=typeof window}function f(t){return n(t)||i(t)}function l(t){return(vt=pe(t,ie))&&pr}function p(t,e){return console.warn("Invalid property",t,"set to",e,"Missing plugin? gsap.registerPlugin()")}function c(t,e){return!e&&console.warn(t)}function _(t,e){return t&&(ie[t]=e)&&vt&&(vt[t]=e)||ie}function d(){return 0}function m(t){var e,r,i=t[0];if(o(i)||n(i)||(t=[t]),!(e=(i._gsap||{}).harness)){for(r=fe.length;r--&&!fe[r].targetTest(i););e=fe[r]}for(r=t.length;r--;)t[r]&&(t[r]._gsap||(t[r]._gsap=new Be(t[r],e)))||t.splice(r,1);return t}function g(t){return t._gsap||m(ye(t))[0]._gsap}function v(t,e,r){return(r=t[e])&&n(r)?t[e]():a(r)&&t.getAttribute&&t.getAttribute(e)||r}function y(t,e){return(t=t.split(",")).forEach(e)||t}function T(t){return Math.round(1e5*t)/1e5||0}function x(t){return Math.round(1e7*t)/1e7||0}function w(t,e){for(var r=e.length,i=0;t.indexOf(e[i])<0&&++i<r;);return i<r}function b(){var t,e,r=se.length,i=se.slice(0);for(ae={},t=se.length=0;t<r;t++)(e=i[t])&&e._lazy&&(e.render(e._lazy[0],e._lazy[1],!0)._lazy=0)}function M(t,e,r,i){se.length&&b(),t.render(e,r,i),se.length&&b()}function O(t){var e=parseFloat(t);return(e||0===e)&&(t+"").match(ee).length<2?e:i(t)?t.trim():t}function k(t){return t}function A(t,e){for(var r in e)r in t||(t[r]=e[r]);return t}function C(t,e){for(var r in e)"__proto__"!==r&&"constructor"!==r&&"prototype"!==r&&(t[r]=o(e[r])?C(t[r]||(t[r]={}),e[r]):e[r]);return t}function D(t,e){var r,i={};for(r in t)r in e||(i[r]=t[r]);return i}function P(t){var e,r=t.parent||_t,i=t.keyframes?(e=Ht(t.keyframes),function(t,r){for(var i in r)i in t||"duration"===i&&e||"ease"===i||(t[i]=r[i])}):A;if(u(t.inherit))for(;r;)i(t,r.vars.defaults),r=r.parent||r._dp;return t}function S(t,e,r,i){void 0===r&&(r="_first"),void 0===i&&(i="_last");var n=e._prev,s=e._next;n?n._next=s:t[r]===e&&(t[r]=s),s?s._prev=n:t[i]===e&&(t[i]=n),e._next=e._prev=e.parent=null}function z(t,e){!t.parent||e&&!t.parent.autoRemoveChildren||t.parent.remove(t),t._act=0}function R(t,e){if(t&&(!e||e._end>t._dur||e._start<0))for(var r=t;r;)r._dirty=1,r=r.parent;return t}function E(t){return t._repeat?ce(t._tTime,t=t.duration()+t._rDelay)*t:0}function F(t,e){return(t-e._start)*e._ts+(0<=e._ts?0:e._dirty?e.totalDuration():e._tDur)}function B(t){return t._end=x(t._start+(t._tDur/Math.abs(t._ts||t._rts||Xt)||0))}function I(t,e){var r=t._dp;return r&&r.smoothChildTiming&&t._ts&&(t._start=x(r._time-(0<t._ts?e/t._ts:((t._dirty?t.totalDuration():t._tDur)-e)/-t._ts)),B(t),r._dirty||R(r,t)),t}function L(t,e){var r;if((e._time||e._initted&&!e._dur)&&(r=F(t.rawTime(),e),(!e._dur||ge(0,e.totalDuration(),r)-e._tTime>Xt)&&e.render(r,!0)),R(t,e)._dp&&t._initted&&t._time>=t._dur&&t._ts){if(t._dur<t.duration())for(r=t;r._dp;)0<=r.rawTime()&&r.totalTime(r._tTime),r=r._dp;t._zTime=-Xt}}function Y(t,e,r,i){return e.parent&&z(e),e._start=x((s(r)?r:r||t!==_t?me(t,r,e):t._time)+e._delay),e._end=x(e._start+(e.totalDuration()/Math.abs(e.timeScale())||0)),function(t,e,r,i,n){void 0===r&&(r="_first"),void 0===i&&(i="_last");var s,a=t[i];if(n)for(s=e[n];a&&a[n]>s;)a=a._prev;a?(e._next=a._next,a._next=e):(e._next=t[r],t[r]=e),e._next?e._next._prev=e:t[i]=e,e._prev=a,e.parent=e._dp=t}(t,e,"_first","_last",t._sort?"_start":0),_e(e)||(t._recent=e),i||L(t,e),t}function U(t,e){return(ie.ScrollTrigger||p("scrollTrigger",e))&&ie.ScrollTrigger.create(e,t)}function X(t,e,r,i){return function t(e,r){var i,n,s,a,o,h,f,l,p,c,_,d,v,y=e.vars,T=y.ease,x=y.startAt,w=y.immediateRender,M=y.lazy,O=y.onUpdate,k=y.onUpdateParams,C=y.callbackScope,P=y.runBackwards,S=y.yoyoEase,R=y.keyframes,E=y.autoRevert,F=e._dur,B=e._startAt,I=e._targets,L=e.parent,Y=L&&"nested"===L.data?L.parent._targets:I,U="auto"===e._overwrite&&!ct,X=e.timeline;if(!X||R&&T||(T="none"),e._ease=ze(T,Yt.ease),e._yEase=S?Se(ze(!0===S?T:S,Yt.ease)):0,S&&e._yoyo&&!e._repeat&&(S=e._yEase,e._yEase=e._ease,e._ease=S),e._from=!X&&!!y.runBackwards,!X||R&&!y.stagger){if(d=(l=I[0]?g(I[0]).harness:0)&&y[l.prop],i=D(y,ne),B&&z(B.render(-1,!0)),x)if(z(e._startAt=Ge.set(I,A({data:"isStart",overwrite:!1,parent:L,immediateRender:!0,lazy:u(M),startAt:null,delay:0,onUpdate:O,onUpdateParams:k,callbackScope:C,stagger:0},x))),r<0&&!w&&!E&&e._startAt.render(-1,!0),w){if(0<r&&!E&&(e._startAt=0),F&&r<=0)return void(r&&(e._zTime=r))}else!1===E&&(e._startAt=0);else if(P&&F)if(B)E||(e._startAt=0);else if(r&&(w=!1),s=A({overwrite:!1,data:"isFromStart",lazy:w&&u(M),immediateRender:w,stagger:0,parent:L},i),d&&(s[l.prop]=d),z(e._startAt=Ge.set(I,s)),r<0&&e._startAt.render(-1,!0),e._zTime=r,w){if(!r)return}else t(e._startAt,Xt);for(e._pt=0,M=F&&u(M)||M&&!F,n=0;n<I.length;n++){if(f=(o=I[n])._gsap||m(I)[n]._gsap,e._ptLookup[n]=c={},ae[f.id]&&se.length&&b(),_=Y===I?n:Y.indexOf(o),l&&!1!==(p=new l).init(o,d||i,e,_,Y)&&(e._pt=a=new or(e._pt,o,p.name,0,1,p.render,p,0,p.priority),p._props.forEach((function(t){c[t]=a})),p.priority&&(h=1)),!l||d)for(s in i)oe[s]&&(p=Ue(s,i,e,_,o,Y))?p.priority&&(h=1):c[s]=a=qe.call(e,o,s,"get",i[s],_,Y,0,y.stringFilter);e._op&&e._op[n]&&e.kill(o,e._op[n]),U&&e._pt&&(Ne=e,_t.killTweensOf(o,c,e.globalTime(r)),v=!e.parent,Ne=0),e._pt&&M&&(ae[f.id]=1)}h&&ar(e),e._onInit&&e._onInit(e)}e._onUpdate=O,e._initted=(!e._op||e._pt)&&!v,R&&r<=0&&X.render(Ut,!0,!0)}(t,e),t._initted?!r&&t._pt&&(t._dur&&!1!==t.vars.lazy||!t._dur&&t.vars.lazy)&&Tt!==ke.frame?(se.push(t),t._lazy=[e,i],1):void 0:1}function N(t,e,r,i){var n=t._repeat,s=x(e)||0,a=t._tTime/t._tDur;return a&&!i&&(t._time*=s/t._dur),t._dur=s,t._tDur=n?n<0?1e10:x(s*(n+1)+t._rDelay*n):s,0<a&&!i?I(t,t._tTime=t._tDur*a):t.parent&&B(t),r||R(t.parent,t),t}function q(t){return t instanceof Ye?R(t):N(t,t._dur)}function V(t,e,r){var i,n,a=s(e[1]),o=(a?2:1)+(t<2?0:1),h=e[o];if(a&&(h.duration=e[1]),h.parent=r,t){for(i=h,n=r;n&&!("immediateRender"in i);)i=n.vars.defaults||{},n=u(n.vars.inherit)&&n.parent;h.immediateRender=u(i.immediateRender),t<2?h.runBackwards=1:h.startAt=e[o-1]}return new Ge(e[0],h,e[1+o])}function j(t,e){return t||0===t?e(t):e}function Q(t,e){return i(t)&&(e=re.exec(t))?t.substr(e.index+e[0].length):""}function G(t,e){return t&&o(t)&&"length"in t&&(!e&&!t.length||t.length-1 in t&&o(t[0]))&&!t.nodeType&&t!==dt}function W(t){return t.sort((function(){return.5-Math.random()}))}function H(t){if(n(t))return t;var e=o(t)?t:{each:t},r=ze(e.ease),s=e.from||0,a=parseFloat(e.base)||0,u={},h=0<s&&s<1,f=isNaN(s)||h,l=e.axis,p=s,c=s;return i(s)?p=c={center:.5,edges:.5,end:1}[s]||0:!h&&f&&(p=s[0],c=s[1]),function(t,i,n){var o,h,_,d,m,g,v,y,T,w=(n||e).length,b=u[w];if(!b){if(!(T="auto"===e.grid?0:(e.grid||[1,Ut])[1])){for(v=-Ut;v<(v=n[T++].getBoundingClientRect().left)&&T<w;);T--}for(b=u[w]=[],o=f?Math.min(T,w)*p-.5:s%T,h=T===Ut?0:f?w*c/T-.5:s/T|0,y=Ut,g=v=0;g<w;g++)_=g%T-o,d=h-(g/T|0),b[g]=m=l?Math.abs("y"===l?d:_):jt(_*_+d*d),v<m&&(v=m),m<y&&(y=m);"random"===s&&W(b),b.max=v-y,b.min=y,b.v=w=(parseFloat(e.amount)||parseFloat(e.each)*(w<T?w-1:l?"y"===l?w/T:T:Math.max(T,w/T))||0)*("edges"===s?-1:1),b.b=w<0?a-w:a,b.u=Q(e.amount||e.each)||0,r=r&&w<0?Se(r):r}return w=(b[t]-b.min)/b.max||0,x(b.b+(r?r(w):w)*b.v)+b.u}}function Z(t){var e=Math.pow(10,((t+"").split(".")[1]||"").length);return function(r){var i=Math.round(parseFloat(r)/t)*t*e;return(i-i%1)/e+(s(r)?0:Q(r))}}function $(t,e){var r,i,a=Ht(t);return!a&&o(t)&&(r=a=t.radius||Ut,t.values?(t=ye(t.values),(i=!s(t[0]))&&(r*=r)):t=Z(t.increment)),j(e,a?n(t)?function(e){return i=t(e),Math.abs(i-e)<=r?i:e}:function(e){for(var n,a,o=parseFloat(i?e.x:e),u=parseFloat(i?e.y:0),h=Ut,f=0,l=t.length;l--;)(n=i?(n=t[l].x-o)*n+(a=t[l].y-u)*a:Math.abs(t[l]-o))<h&&(h=n,f=l);return f=!r||h<=r?t[f]:e,i||f===e||s(e)?f:f+Q(e)}:Z(t))}function J(t,e,r,i){return j(Ht(t)?!e:!0===r?!!(r=0):!i,(function(){return Ht(t)?t[~~(Math.random()*t.length)]:(r=r||1e-5)&&(i=r<1?Math.pow(10,(r+"").length-2):1)&&Math.floor(Math.round((t-r/2+Math.random()*(e-t+.99*r))/r)*r*i)/i}))}function K(t,e,r){return j(r,(function(r){return t[~~e(r)]}))}function tt(t){for(var e,r,i,n,s=0,a="";~(e=t.indexOf("random(",s));)i=t.indexOf(")",e),n="["===t.charAt(e+7),r=t.substr(e+7,i-e-7).match(n?ee:Zt),a+=t.substr(s,e-s)+J(n?r:+r[0],n?0:+r[1],+r[2]||1e-5),s=i+1;return a+t.substr(s,t.length-s)}function et(t,e,r){var i,n,s,a=t.labels,o=Ut;for(i in a)(n=a[i]-e)<0==!!r&&n&&o>(n=Math.abs(n))&&(s=i,o=n);return s}function rt(t){return z(t),t.scrollTrigger&&t.scrollTrigger.kill(!1),t.progress()<1&&xe(t,"onInterrupt"),t}function it(t,e,r){return(6*(t+=t<0?1:1<t?-1:0)<1?e+(r-e)*t*6:t<.5?r:3*t<2?e+(r-e)*(2/3-t)*6:e)*we+.5|0}function nt(t,e,r){var i,n,a,o,u,h,f,l,p,c,_=t?s(t)?[t>>16,t>>8&we,t&we]:0:be.black;if(!_){if(","===t.substr(-1)&&(t=t.substr(0,t.length-1)),be[t])_=be[t];else if("#"===t.charAt(0)){if(t.length<6&&(t="#"+(i=t.charAt(1))+i+(n=t.charAt(2))+n+(a=t.charAt(3))+a+(5===t.length?t.charAt(4)+t.charAt(4):"")),9===t.length)return[(_=parseInt(t.substr(1,6),16))>>16,_>>8&we,_&we,parseInt(t.substr(7),16)/255];_=[(t=parseInt(t.substr(1),16))>>16,t>>8&we,t&we]}else if("hsl"===t.substr(0,3))if(_=c=t.match(Zt),e){if(~t.indexOf("="))return _=t.match($t),r&&_.length<4&&(_[3]=1),_}else o=+_[0]%360/360,u=_[1]/100,i=2*(h=_[2]/100)-(n=h<=.5?h*(u+1):h+u-h*u),3<_.length&&(_[3]*=1),_[0]=it(o+1/3,i,n),_[1]=it(o,i,n),_[2]=it(o-1/3,i,n);else _=t.match(Zt)||be.transparent;_=_.map(Number)}return e&&!c&&(i=_[0]/we,n=_[1]/we,a=_[2]/we,h=((f=Math.max(i,n,a))+(l=Math.min(i,n,a)))/2,f===l?o=u=0:(p=f-l,u=.5<h?p/(2-f-l):p/(f+l),o=f===i?(n-a)/p+(n<a?6:0):f===n?(a-i)/p+2:(i-n)/p+4,o*=60),_[0]=~~(o+.5),_[1]=~~(100*u+.5),_[2]=~~(100*h+.5)),r&&_.length<4&&(_[3]=1),_}function st(t){var e=[],r=[],i=-1;return t.split(Me).forEach((function(t){var n=t.match(Jt)||[];e.push.apply(e,n),r.push(i+=n.length+1)})),e.c=r,e}function at(t,e,r){var i,n,s,a,o="",u=(t+o).match(Me),h=e?"hsla(":"rgba(",f=0;if(!u)return t;if(u=u.map((function(t){return(t=nt(t,e,1))&&h+(e?t[0]+","+t[1]+"%,"+t[2]+"%,"+t[3]:t.join(","))+")"})),r&&(s=st(t),(i=r.c).join(o)!==s.c.join(o)))for(a=(n=t.replace(Me,"1").split(Jt)).length-1;f<a;f++)o+=n[f]+(~i.indexOf(f)?u.shift()||h+"0,0,0,0)":(s.length?s:u.length?u:r).shift());if(!n)for(a=(n=t.split(Me)).length-1;f<a;f++)o+=n[f]+u[f];return o+n[a]}function ot(t){var e,r=t.join(" ");if(Me.lastIndex=0,Me.test(r))return e=Oe.test(r),t[1]=at(t[1],e),t[0]=at(t[0],e,st(t[1])),!0}function ut(t,e){for(var r,i=t._first;i;)i instanceof Ye?ut(i,e):!i.vars.yoyoEase||i._yoyo&&i._repeat||i._yoyo===e||(i.timeline?ut(i.timeline,e):(r=i._ease,i._ease=i._yEase,i._yEase=r,i._yoyo=e)),i=i._next}function ht(t,e,r,i){void 0===r&&(r=function(t){return 1-e(1-t)}),void 0===i&&(i=function(t){return t<.5?e(2*t)/2:1-e(2*(1-t))/2});var n,s={easeIn:e,easeOut:r,easeInOut:i};return y(t,(function(t){for(var e in Ce[t]=ie[t]=s,Ce[n=t.toLowerCase()]=r,s)Ce[n+("easeIn"===e?".in":"easeOut"===e?".out":".inOut")]=Ce[t+"."+e]=s[e]})),s}function ft(t){return function(e){return e<.5?(1-t(1-2*e))/2:.5+t(2*(e-.5))/2}}function lt(t,e,r){function i(t){return 1===t?1:n*Math.pow(2,-10*t)*Gt((t-a)*s)+1}var n=1<=e?e:1,s=(r||(t?.3:.45))/(e<1?e:1),a=s/Nt*(Math.asin(1/n)||0),o="out"===t?i:"in"===t?function(t){return 1-i(1-t)}:ft(i);return s=Nt/s,o.config=function(e,r){return lt(t,e,r)},o}function pt(t,e){function r(t){return t?--t*t*((e+1)*t+e)+1:0}void 0===e&&(e=1.70158);var i="out"===t?r:"in"===t?function(t){return 1-r(1-t)}:ft(r);return i.config=function(e){return pt(t,e)},i}var ct,_t,dt,mt,gt,vt,yt,Tt,xt,wt,bt,Mt,Ot,kt,At,Ct,Dt,Pt,St,zt,Rt,Et,Ft,Bt,It,Lt={autoSleep:120,force3D:"auto",nullTargetWarn:1,units:{lineHeight:""}},Yt={duration:.5,overwrite:!1,delay:0},Ut=1e8,Xt=1/Ut,Nt=2*Math.PI,qt=Nt/4,Vt=0,jt=Math.sqrt,Qt=Math.cos,Gt=Math.sin,Wt="function"==typeof ArrayBuffer&&ArrayBuffer.isView||function(){},Ht=Array.isArray,Zt=/(?:-?\.?\d|\.)+/gi,$t=/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,Jt=/[-+=.]*\d+[.e-]*\d*[a-z%]*/g,Kt=/[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,te=/[+-]=-?[.\d]+/,ee=/[^,'"\[\]\s]+/gi,re=/[\d.+\-=]+(?:e[-+]\d*)*/i,ie={},ne={},se=[],ae={},oe={},ue={},he=30,fe=[],le="",pe=function(t,e){for(var r in e)t[r]=e[r];return t},ce=function(t,e){var r=Math.floor(t/=e);return t&&r===t?r-1:r},_e=function(t){var e=t.data;return"isFromStart"===e||"isStart"===e},de={_start:0,endTime:d,totalDuration:d},me=function t(e,r,n){var s,a,o,u=e.labels,h=e._recent||de,f=e.duration()>=Ut?h.endTime(!1):e._dur;return i(r)&&(isNaN(r)||r in u)?(a=r.charAt(0),o="%"===r.substr(-1),s=r.indexOf("="),"<"===a||">"===a?(0<=s&&(r=r.replace(/=/,"")),("<"===a?h._start:h.endTime(0<=h._repeat))+(parseFloat(r.substr(1))||0)*(o?(s<0?h:n).totalDuration()/100:1)):s<0?(r in u||(u[r]=f),u[r]):(a=parseFloat(r.charAt(s-1)+r.substr(s+1)),o&&n&&(a=a/100*(Ht(n)?n[0]:n).totalDuration()),1<s?t(e,r.substr(0,s-1),n)+a:f+a)):null==r?f:+r},ge=function(t,e,r){return r<t?t:e<r?e:r},ve=[].slice,ye=function(t,e,r){return!i(t)||r||!mt&&Ae()?Ht(t)?(n=r,void 0===s&&(s=[]),t.forEach((function(t){return i(t)&&!n||G(t,1)?s.push.apply(s,ye(t)):s.push(t)}))||s):G(t)?ve.call(t,0):t?[t]:[]:ve.call((e||gt).querySelectorAll(t),0);var n,s},Te=function(t,e,r,i,n){var s=e-t,a=i-r;return j(n,(function(e){return r+((e-t)/s*a||0)}))},xe=function(t,e,r){var i,n,s=t.vars,a=s[e];if(a)return i=s[e+"Params"],n=s.callbackScope||t,r&&se.length&&b(),i?a.apply(n,i):a.call(n)},we=255,be={aqua:[0,we,we],lime:[0,we,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,we],navy:[0,0,128],white:[we,we,we],olive:[128,128,0],yellow:[we,we,0],orange:[we,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[we,0,0],pink:[we,192,203],cyan:[0,we,we],transparent:[we,we,we,0]},Me=function(){var t,e="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b";for(t in be)e+="|"+t+"\\b";return new RegExp(e+")","gi")}(),Oe=/hsl[a]?\(/,ke=(Dt=Date.now,Pt=500,St=33,zt=Dt(),Rt=zt,Ft=Et=1e3/240,kt={time:0,frame:0,tick:function(){Re(!0)},deltaRatio:function(t){return At/(1e3/(t||60))},wake:function(){yt&&(!mt&&h()&&(dt=mt=window,gt=dt.document||{},ie.gsap=pr,(dt.gsapVersions||(dt.gsapVersions=[])).push(pr.version),l(vt||dt.GreenSockGlobals||!dt.gsap&&dt||{}),Ot=dt.requestAnimationFrame),bt&&kt.sleep(),Mt=Ot||function(t){return setTimeout(t,Ft-1e3*kt.time+1|0)},wt=1,Re(2))},sleep:function(){(Ot?dt.cancelAnimationFrame:clearTimeout)(bt),wt=0,Mt=d},lagSmoothing:function(t,e){Pt=t||1e8,St=Math.min(e,Pt,0)},fps:function(t){Et=1e3/(t||240),Ft=1e3*kt.time+Et},add:function(t){Bt.indexOf(t)<0&&Bt.push(t),Ae()},remove:function(t,e){~(e=Bt.indexOf(t))&&Bt.splice(e,1)&&e<=Ct&&Ct--},_listeners:Bt=[]}),Ae=function(){return!wt&&ke.wake()},Ce={},De=/^[\d.\-M][\d.\-,\s]/,Pe=/["']/g,Se=function(t){return function(e){return 1-t(1-e)}},ze=function(t,e){return t&&(n(t)?t:Ce[t]||function(t){var e,r,i,n,s=(t+"").split("("),a=Ce[s[0]];return a&&1<s.length&&a.config?a.config.apply(null,~t.indexOf("{")?[function(t){for(var e,r,i,n={},s=t.substr(1,t.length-3).split(":"),a=s[0],o=1,u=s.length;o<u;o++)r=s[o],e=o!==u-1?r.lastIndexOf(","):r.length,i=r.substr(0,e),n[a]=isNaN(i)?i.replace(Pe,"").trim():+i,a=r.substr(e+1).trim();return n}(s[1])]:(r=(e=t).indexOf("(")+1,i=e.indexOf(")"),n=e.indexOf("(",r),e.substring(r,~n&&n<i?e.indexOf(")",i+1):i)).split(",").map(O)):Ce._CE&&De.test(t)?Ce._CE("",t):a}(t))||e};function Re(t){var e,r,i,n,s=Dt()-Rt,a=!0===t;if(Pt<s&&(zt+=s-St),(0<(e=(i=(Rt+=s)-zt)-Ft)||a)&&(n=++kt.frame,At=i-1e3*kt.time,kt.time=i/=1e3,Ft+=e+(Et<=e?4:Et-e),r=1),a||(bt=Mt(Re)),r)for(Ct=0;Ct<Bt.length;Ct++)Bt[Ct](i,At,n,t)}function Ee(t){return t<1/2.75?It*t*t:t<.7272727272727273?It*Math.pow(t-1.5/2.75,2)+.75:t<.9090909090909092?It*(t-=2.25/2.75)*t+.9375:It*Math.pow(t-2.625/2.75,2)+.984375}y("Linear,Quad,Cubic,Quart,Quint,Strong",(function(t,e){var r=e<5?e+1:e;ht(t+",Power"+(r-1),e?function(t){return Math.pow(t,r)}:function(t){return t},(function(t){return 1-Math.pow(1-t,r)}),(function(t){return t<.5?Math.pow(2*t,r)/2:1-Math.pow(2*(1-t),r)/2}))})),Ce.Linear.easeNone=Ce.none=Ce.Linear.easeIn,ht("Elastic",lt("in"),lt("out"),lt()),It=7.5625,ht("Bounce",(function(t){return 1-Ee(1-t)}),Ee),ht("Expo",(function(t){return t?Math.pow(2,10*(t-1)):0})),ht("Circ",(function(t){return-(jt(1-t*t)-1)})),ht("Sine",(function(t){return 1===t?1:1-Qt(t*qt)})),ht("Back",pt("in"),pt("out"),pt()),Ce.SteppedEase=Ce.steps=ie.SteppedEase={config:function(t,e){void 0===t&&(t=1);var r=1/t,i=t+(e?0:1),n=e?1:0;return function(t){return((i*ge(0,.99999999,t)|0)+n)*r}}},Yt.ease=Ce["quad.out"],y("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",(function(t){return le+=t+","+t+"Params,"}));var Fe,Be=function(t,e){this.id=Vt++,(t._gsap=this).target=t,this.harness=e,this.get=e?e.get:v,this.set=e?e.getSetter:Ke},Ie=((Fe=Le.prototype).delay=function(t){return t||0===t?(this.parent&&this.parent.smoothChildTiming&&this.startTime(this._start+t-this._delay),this._delay=t,this):this._delay},Fe.duration=function(t){return arguments.length?this.totalDuration(0<this._repeat?t+(t+this._rDelay)*this._repeat:t):this.totalDuration()&&this._dur},Fe.totalDuration=function(t){return arguments.length?(this._dirty=0,N(this,this._repeat<0?t:(t-this._repeat*this._rDelay)/(this._repeat+1))):this._tDur},Fe.totalTime=function(t,e){if(Ae(),!arguments.length)return this._tTime;var r=this._dp;if(r&&r.smoothChildTiming&&this._ts){for(I(this,t),!r._dp||r.parent||L(r,this);r&&r.parent;)r.parent._time!==r._start+(0<=r._ts?r._tTime/r._ts:(r.totalDuration()-r._tTime)/-r._ts)&&r.totalTime(r._tTime,!0),r=r.parent;!this.parent&&this._dp.autoRemoveChildren&&(0<this._ts&&t<this._tDur||this._ts<0&&0<t||!this._tDur&&!t)&&Y(this._dp,this,this._start-this._delay)}return(this._tTime!==t||!this._dur&&!e||this._initted&&Math.abs(this._zTime)===Xt||!t&&!this._initted&&(this.add||this._ptLookup))&&(this._ts||(this._pTime=t),M(this,t,e)),this},Fe.time=function(t,e){return arguments.length?this.totalTime(Math.min(this.totalDuration(),t+E(this))%(this._dur+this._rDelay)||(t?this._dur:0),e):this._time},Fe.totalProgress=function(t,e){return arguments.length?this.totalTime(this.totalDuration()*t,e):this.totalDuration()?Math.min(1,this._tTime/this._tDur):this.ratio},Fe.progress=function(t,e){return arguments.length?this.totalTime(this.duration()*(!this._yoyo||1&this.iteration()?t:1-t)+E(this),e):this.duration()?Math.min(1,this._time/this._dur):this.ratio},Fe.iteration=function(t,e){var r=this.duration()+this._rDelay;return arguments.length?this.totalTime(this._time+(t-1)*r,e):this._repeat?ce(this._tTime,r)+1:1},Fe.timeScale=function(t){if(!arguments.length)return this._rts===-Xt?0:this._rts;if(this._rts===t)return this;var e=this.parent&&this._ts?F(this.parent._time,this):this._tTime;return this._rts=+t||0,this._ts=this._ps||t===-Xt?0:this._rts,function(t){for(var e=t.parent;e&&e.parent;)e._dirty=1,e.totalDuration(),e=e.parent}(this.totalTime(ge(-this._delay,this._tDur,e),!0)),B(this),this},Fe.paused=function(t){return arguments.length?(this._ps!==t&&((this._ps=t)?(this._pTime=this._tTime||Math.max(-this._delay,this.rawTime()),this._ts=this._act=0):(Ae(),this._ts=this._rts,this.totalTime(this.parent&&!this.parent.smoothChildTiming?this.rawTime():this._tTime||this._pTime,1===this.progress()&&Math.abs(this._zTime)!==Xt&&(this._tTime-=Xt)))),this):this._ps},Fe.startTime=function(t){if(arguments.length){this._start=t;var e=this.parent||this._dp;return!e||!e._sort&&this.parent||Y(e,this,t-this._delay),this}return this._start},Fe.endTime=function(t){return this._start+(u(t)?this.totalDuration():this.duration())/Math.abs(this._ts||1)},Fe.rawTime=function(t){var e=this.parent||this._dp;return e?t&&(!this._ts||this._repeat&&this._time&&this.totalProgress()<1)?this._tTime%(this._dur+this._rDelay):this._ts?F(e.rawTime(t),this):this._tTime:this._tTime},Fe.globalTime=function(t){for(var e=this,r=arguments.length?t:e.rawTime();e;)r=e._start+r/(e._ts||1),e=e._dp;return r},Fe.repeat=function(t){return arguments.length?(this._repeat=t===1/0?-2:t,q(this)):-2===this._repeat?1/0:this._repeat},Fe.repeatDelay=function(t){if(arguments.length){var e=this._time;return this._rDelay=t,q(this),e?this.time(e):this}return this._rDelay},Fe.yoyo=function(t){return arguments.length?(this._yoyo=t,this):this._yoyo},Fe.seek=function(t,e){return this.totalTime(me(this,t),u(e))},Fe.restart=function(t,e){return this.play().totalTime(t?-this._delay:0,u(e))},Fe.play=function(t,e){return null!=t&&this.seek(t,e),this.reversed(!1).paused(!1)},Fe.reverse=function(t,e){return null!=t&&this.seek(t||this.totalDuration(),e),this.reversed(!0).paused(!1)},Fe.pause=function(t,e){return null!=t&&this.seek(t,e),this.paused(!0)},Fe.resume=function(){return this.paused(!1)},Fe.reversed=function(t){return arguments.length?(!!t!==this.reversed()&&this.timeScale(-this._rts||(t?-Xt:0)),this):this._rts<0},Fe.invalidate=function(){return this._initted=this._act=0,this._zTime=-Xt,this},Fe.isActive=function(){var t,e=this.parent||this._dp,r=this._start;return!(e&&!(this._ts&&this._initted&&e.isActive()&&(t=e.rawTime(!0))>=r&&t<this.endTime(!0)-Xt))},Fe.eventCallback=function(t,e,r){var i=this.vars;return 1<arguments.length?(e?(i[t]=e,r&&(i[t+"Params"]=r),"onUpdate"===t&&(this._onUpdate=e)):delete i[t],this):i[t]},Fe.then=function(t){var e=this;return new Promise((function(r){function i(){var t=e.then;e.then=null,n(s)&&(s=s(e))&&(s.then||s===e)&&(e.then=t),r(s),e.then=t}var s=n(t)?t:k;e._initted&&1===e.totalProgress()&&0<=e._ts||!e._tTime&&e._ts<0?i():e._prom=i}))},Fe.kill=function(){rt(this)},Le);function Le(t){this.vars=t,this._delay=+t.delay||0,(this._repeat=t.repeat===1/0?-2:t.repeat||0)&&(this._rDelay=t.repeatDelay||0,this._yoyo=!!t.yoyo||!!t.yoyoEase),this._ts=1,N(this,+t.duration,1,1),this.data=t.data,wt||ke.wake()}A(Ie.prototype,{_time:0,_start:0,_end:0,_tTime:0,_tDur:0,_dirty:0,_repeat:0,_yoyo:!1,parent:null,_initted:!1,_rDelay:0,_ts:1,_dp:0,ratio:0,_zTime:-Xt,_prom:0,_ps:!1,_rts:1});var Ye=function(t){function a(e,i){var n;return void 0===e&&(e={}),(n=t.call(this,e)||this).labels={},n.smoothChildTiming=!!e.smoothChildTiming,n.autoRemoveChildren=!!e.autoRemoveChildren,n._sort=u(e.sortChildren),_t&&Y(e.parent||_t,r(n),i),e.reversed&&n.reverse(),e.paused&&n.paused(!0),e.scrollTrigger&&U(r(n),e.scrollTrigger),n}e(a,t);var o=a.prototype;return o.to=function(t,e,r){return V(0,arguments,this),this},o.from=function(t,e,r){return V(1,arguments,this),this},o.fromTo=function(t,e,r,i){return V(2,arguments,this),this},o.set=function(t,e,r){return e.duration=0,e.parent=this,P(e).repeatDelay||(e.repeat=0),e.immediateRender=!!e.immediateRender,new Ge(t,e,me(this,r),1),this},o.call=function(t,e,r){return Y(this,Ge.delayedCall(0,t,e),r)},o.staggerTo=function(t,e,r,i,n,s,a){return r.duration=e,r.stagger=r.stagger||i,r.onComplete=s,r.onCompleteParams=a,r.parent=this,new Ge(t,r,me(this,n)),this},o.staggerFrom=function(t,e,r,i,n,s,a){return r.runBackwards=1,P(r).immediateRender=u(r.immediateRender),this.staggerTo(t,e,r,i,n,s,a)},o.staggerFromTo=function(t,e,r,i,n,s,a,o){return i.startAt=r,P(i).immediateRender=u(i.immediateRender),this.staggerTo(t,e,i,n,s,a,o)},o.render=function(t,e,r){var i,n,s,a,o,u,h,f,l,p,c,_,d=this._time,m=this._dirty?this.totalDuration():this._tDur,g=this._dur,v=t<=0?0:x(t),y=this._zTime<0!=t<0&&(this._initted||!g);if(this!==_t&&m<v&&0<=t&&(v=m),v!==this._tTime||r||y){if(d!==this._time&&g&&(v+=this._time-d,t+=this._time-d),i=v,l=this._start,u=!(f=this._ts),y&&(g||(d=this._zTime),!t&&e||(this._zTime=t)),this._repeat){if(c=this._yoyo,o=g+this._rDelay,this._repeat<-1&&t<0)return this.totalTime(100*o+t,e,r);if(i=x(v%o),v===m?(a=this._repeat,i=g):((a=~~(v/o))&&a===v/o&&(i=g,a--),g<i&&(i=g)),p=ce(this._tTime,o),!d&&this._tTime&&p!==a&&(p=a),c&&1&a&&(i=g-i,_=1),a!==p&&!this._lock){var T=c&&1&p,w=T===(c&&1&a);if(a<p&&(T=!T),d=T?0:g,this._lock=1,this.render(d||(_?0:x(a*o)),e,!g)._lock=0,this._tTime=v,!e&&this.parent&&xe(this,"onRepeat"),this.vars.repeatRefresh&&!_&&(this.invalidate()._lock=1),d&&d!==this._time||u!=!this._ts||this.vars.onRepeat&&!this.parent&&!this._act)return this;if(g=this._dur,m=this._tDur,w&&(this._lock=2,d=T?g:-1e-4,this.render(d,!0),this.vars.repeatRefresh&&!_&&this.invalidate()),this._lock=0,!this._ts&&!u)return this;ut(this,_)}}if(this._hasPause&&!this._forcing&&this._lock<2&&(h=function(t,e,r){var i;if(e<r)for(i=t._first;i&&i._start<=r;){if("isPause"===i.data&&i._start>e)return i;i=i._next}else for(i=t._last;i&&i._start>=r;){if("isPause"===i.data&&i._start<e)return i;i=i._prev}}(this,x(d),x(i)))&&(v-=i-(i=h._start)),this._tTime=v,this._time=i,this._act=!f,this._initted||(this._onUpdate=this.vars.onUpdate,this._initted=1,this._zTime=t,d=0),!d&&i&&!e&&(xe(this,"onStart"),this._tTime!==v))return this;if(d<=i&&0<=t)for(n=this._first;n;){if(s=n._next,(n._act||i>=n._start)&&n._ts&&h!==n){if(n.parent!==this)return this.render(t,e,r);if(n.render(0<n._ts?(i-n._start)*n._ts:(n._dirty?n.totalDuration():n._tDur)+(i-n._start)*n._ts,e,r),i!==this._time||!this._ts&&!u){h=0,s&&(v+=this._zTime=-Xt);break}}n=s}else{n=this._last;for(var b=t<0?t:i;n;){if(s=n._prev,(n._act||b<=n._end)&&n._ts&&h!==n){if(n.parent!==this)return this.render(t,e,r);if(n.render(0<n._ts?(b-n._start)*n._ts:(n._dirty?n.totalDuration():n._tDur)+(b-n._start)*n._ts,e,r),i!==this._time||!this._ts&&!u){h=0,s&&(v+=this._zTime=b?-Xt:Xt);break}}n=s}}if(h&&!e&&(this.pause(),h.render(d<=i?0:-Xt)._zTime=d<=i?1:-1,this._ts))return this._start=l,B(this),this.render(t,e,r);this._onUpdate&&!e&&xe(this,"onUpdate",!0),(v===m&&m>=this.totalDuration()||!v&&d)&&(l!==this._start&&Math.abs(f)===Math.abs(this._ts)||this._lock||(!t&&g||!(v===m&&0<this._ts||!v&&this._ts<0)||z(this,1),e||t<0&&!d||!v&&!d&&m||(xe(this,v===m&&0<=t?"onComplete":"onReverseComplete",!0),!this._prom||v<m&&0<this.timeScale()||this._prom())))}return this},o.add=function(t,e){var r=this;if(s(e)||(e=me(this,e,t)),!(t instanceof Ie)){if(Ht(t))return t.forEach((function(t){return r.add(t,e)})),this;if(i(t))return this.addLabel(t,e);if(!n(t))return this;t=Ge.delayedCall(0,t)}return this!==t?Y(this,t,e):this},o.getChildren=function(t,e,r,i){void 0===t&&(t=!0),void 0===e&&(e=!0),void 0===r&&(r=!0),void 0===i&&(i=-Ut);for(var n=[],s=this._first;s;)s._start>=i&&(s instanceof Ge?e&&n.push(s):(r&&n.push(s),t&&n.push.apply(n,s.getChildren(!0,e,r)))),s=s._next;return n},o.getById=function(t){for(var e=this.getChildren(1,1,1),r=e.length;r--;)if(e[r].vars.id===t)return e[r]},o.remove=function(t){return i(t)?this.removeLabel(t):n(t)?this.killTweensOf(t):(S(this,t),t===this._recent&&(this._recent=this._last),R(this))},o.totalTime=function(e,r){return arguments.length?(this._forcing=1,!this._dp&&this._ts&&(this._start=x(ke.time-(0<this._ts?e/this._ts:(this.totalDuration()-e)/-this._ts))),t.prototype.totalTime.call(this,e,r),this._forcing=0,this):this._tTime},o.addLabel=function(t,e){return this.labels[t]=me(this,e),this},o.removeLabel=function(t){return delete this.labels[t],this},o.addPause=function(t,e,r){var i=Ge.delayedCall(0,e||d,r);return i.data="isPause",this._hasPause=1,Y(this,i,me(this,t))},o.removePause=function(t){var e=this._first;for(t=me(this,t);e;)e._start===t&&"isPause"===e.data&&z(e),e=e._next},o.killTweensOf=function(t,e,r){for(var i=this.getTweensOf(t,r),n=i.length;n--;)Ne!==i[n]&&i[n].kill(t,e);return this},o.getTweensOf=function(t,e){for(var r,i=[],n=ye(t),a=this._first,o=s(e);a;)a instanceof Ge?w(a._targets,n)&&(o?(!Ne||a._initted&&a._ts)&&a.globalTime(0)<=e&&a.globalTime(a.totalDuration())>e:!e||a.isActive())&&i.push(a):(r=a.getTweensOf(n,e)).length&&i.push.apply(i,r),a=a._next;return i},o.tweenTo=function(t,e){e=e||{};var r,i=this,n=me(i,t),s=e.startAt,a=e.onStart,o=e.onStartParams,u=e.immediateRender,h=Ge.to(i,A({ease:e.ease||"none",lazy:!1,immediateRender:!1,time:n,overwrite:"auto",duration:e.duration||Math.abs((n-(s&&"time"in s?s.time:i._time))/i.timeScale())||Xt,onStart:function(){if(i.pause(),!r){var t=e.duration||Math.abs((n-(s&&"time"in s?s.time:i._time))/i.timeScale());h._dur!==t&&N(h,t,0,1).render(h._time,!0,!0),r=1}a&&a.apply(h,o||[])}},e));return u?h.render(0):h},o.tweenFromTo=function(t,e,r){return this.tweenTo(e,A({startAt:{time:me(this,t)}},r))},o.recent=function(){return this._recent},o.nextLabel=function(t){return void 0===t&&(t=this._time),et(this,me(this,t))},o.previousLabel=function(t){return void 0===t&&(t=this._time),et(this,me(this,t),1)},o.currentLabel=function(t){return arguments.length?this.seek(t,!0):this.previousLabel(this._time+Xt)},o.shiftChildren=function(t,e,r){void 0===r&&(r=0);for(var i,n=this._first,s=this.labels;n;)n._start>=r&&(n._start+=t,n._end+=t),n=n._next;if(e)for(i in s)s[i]>=r&&(s[i]+=t);return R(this)},o.invalidate=function(){var e=this._first;for(this._lock=0;e;)e.invalidate(),e=e._next;return t.prototype.invalidate.call(this)},o.clear=function(t){void 0===t&&(t=!0);for(var e,r=this._first;r;)e=r._next,this.remove(r),r=e;return this._dp&&(this._time=this._tTime=this._pTime=0),t&&(this.labels={}),R(this)},o.totalDuration=function(t){var e,r,i,n=0,s=this,a=s._last,o=Ut;if(arguments.length)return s.timeScale((s._repeat<0?s.duration():s.totalDuration())/(s.reversed()?-t:t));if(s._dirty){for(i=s.parent;a;)e=a._prev,a._dirty&&a.totalDuration(),o<(r=a._start)&&s._sort&&a._ts&&!s._lock?(s._lock=1,Y(s,a,r-a._delay,1)._lock=0):o=r,r<0&&a._ts&&(n-=r,(!i&&!s._dp||i&&i.smoothChildTiming)&&(s._start+=r/s._ts,s._time-=r,s._tTime-=r),s.shiftChildren(-r,!1,-1/0),o=0),a._end>n&&a._ts&&(n=a._end),a=e;N(s,s===_t&&s._time>n?s._time:n,1,1),s._dirty=0}return s._tDur},a.updateRoot=function(t){if(_t._ts&&(M(_t,F(t,_t)),Tt=ke.frame),ke.frame>=he){he+=Lt.autoSleep||120;var e=_t._first;if((!e||!e._ts)&&Lt.autoSleep&&ke._listeners.length<2){for(;e&&!e._ts;)e=e._next;e||ke.sleep()}}},a}(Ie);function Ue(t,e,r,s,a,u){var h,f,l,p;if(oe[t]&&!1!==(h=new oe[t]).init(a,h.rawVars?e[t]:function(t,e,r,s,a){if(n(t)&&(t=Ve(t,a,e,r,s)),!o(t)||t.style&&t.nodeType||Ht(t)||Wt(t))return i(t)?Ve(t,a,e,r,s):t;var u,h={};for(u in t)h[u]=Ve(t[u],a,e,r,s);return h}(e[t],s,a,u,r),r,s,u)&&(r._pt=f=new or(r._pt,a,t,0,1,h.render,h,0,h.priority),r!==xt))for(l=r._ptLookup[r._targets.indexOf(a)],p=h._props.length;p--;)l[h._props[p]]=f;return h}function Xe(t,e,r,i){var n,s,a=e.ease||i||"power1.inOut";if(Ht(e))s=r[t]||(r[t]=[]),e.forEach((function(t,r){return s.push({t:r/(e.length-1)*100,v:t,e:a})}));else for(n in e)s=r[n]||(r[n]=[]),"ease"===n||s.push({t:parseFloat(t),v:e[n],e:a})}A(Ye.prototype,{_lock:0,_hasPause:0,_forcing:0});var Ne,qe=function(t,e,r,s,a,o,u,h,f){n(s)&&(s=s(a||0,t,o));var l,c=t[e],_="get"!==r?r:n(c)?f?t[e.indexOf("set")||!n(t["get"+e.substr(3)])?e:"get"+e.substr(3)](f):t[e]():c,d=n(c)?f?Je:$e:Ze;if(i(s)&&(~s.indexOf("random(")&&(s=tt(s)),"="===s.charAt(1)&&(!(l=parseFloat(_)+parseFloat(s.substr(2))*("-"===s.charAt(0)?-1:1)+(Q(_)||0))&&0!==l||(s=l))),_!==s)return isNaN(_*s)||""===s?(c||e in t||p(e,s),function(t,e,r,i,n,s,a){var o,u,h,f,l,p,c,_,d=new or(this._pt,t,e,0,1,rr,null,n),m=0,g=0;for(d.b=r,d.e=i,r+="",(c=~(i+="").indexOf("random("))&&(i=tt(i)),s&&(s(_=[r,i],t,e),r=_[0],i=_[1]),u=r.match(Kt)||[];o=Kt.exec(i);)f=o[0],l=i.substring(m,o.index),h?h=(h+1)%5:"rgba("===l.substr(-5)&&(h=1),f!==u[g++]&&(p=parseFloat(u[g-1])||0,d._pt={_next:d._pt,p:l||1===g?l:",",s:p,c:"="===f.charAt(1)?parseFloat(f.substr(2))*("-"===f.charAt(0)?-1:1):parseFloat(f)-p,m:h&&h<4?Math.round:0},m=Kt.lastIndex);return d.c=m<i.length?i.substring(m,i.length):"",d.fp=a,(te.test(i)||c)&&(d.e=0),this._pt=d}.call(this,t,e,_,s,d,h||Lt.stringFilter,f)):(l=new or(this._pt,t,e,+_||0,s-(_||0),"boolean"==typeof c?er:tr,0,d),f&&(l.fp=f),u&&l.modifier(u,this,t),this._pt=l)},Ve=function(t,e,r,s,a){return n(t)?t.call(e,r,s,a):i(t)&&~t.indexOf("random(")?tt(t):t},je=le+"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase",Qe={};y(je+",id,stagger,delay,duration,paused,scrollTrigger",(function(t){return Qe[t]=1}));var Ge=function(t){function n(e,i,n,a){var h;"number"==typeof i&&(n.duration=i,i=n,n=null);var l,p,_,d,g,v,y,T,w=(h=t.call(this,a?i:P(i))||this).vars,b=w.duration,M=w.delay,O=w.immediateRender,k=w.stagger,C=w.overwrite,S=w.keyframes,z=w.defaults,R=w.scrollTrigger,E=w.yoyoEase,F=i.parent||_t,B=(Ht(e)||Wt(e)?s(e[0]):"length"in i)?[e]:ye(e);if(h._targets=B.length?m(B):c("GSAP target "+e+" not found. https://greensock.com",!Lt.nullTargetWarn)||[],h._ptLookup=[],h._overwrite=C,S||k||f(b)||f(M)){if(i=h.vars,(l=h.timeline=new Ye({data:"nested",defaults:z||{}})).kill(),l.parent=l._dp=r(h),l._start=0,k||f(b)||f(M)){if(d=B.length,y=k&&H(k),o(k))for(g in k)~je.indexOf(g)&&((T=T||{})[g]=k[g]);for(p=0;p<d;p++)(_=D(i,Qe)).stagger=0,E&&(_.yoyoEase=E),T&&pe(_,T),v=B[p],_.duration=+Ve(b,r(h),p,v,B),_.delay=(+Ve(M,r(h),p,v,B)||0)-h._delay,!k&&1===d&&_.delay&&(h._delay=M=_.delay,h._start+=M,_.delay=0),l.to(v,_,y?y(p,v,B):0),l._ease=Ce.none;l.duration()?b=M=0:h.timeline=0}else if(S){P(A(l.vars.defaults,{ease:"none"})),l._ease=ze(S.ease||i.ease||"none");var I,L,X,N=0;if(Ht(S))S.forEach((function(t){return l.to(B,t,">")}));else{for(g in _={},S)"ease"===g||"easeEach"===g||Xe(g,S[g],_,S.easeEach);for(g in _)for(I=_[g].sort((function(t,e){return t.t-e.t})),p=N=0;p<I.length;p++)(X={ease:(L=I[p]).e,duration:(L.t-(p?I[p-1].t:0))/100*b})[g]=L.v,l.to(B,X,N),N+=X.duration;l.duration()<b&&l.to({},{duration:b-l.duration()})}}b||h.duration(b=l.duration())}else h.timeline=0;return!0!==C||ct||(Ne=r(h),_t.killTweensOf(B),Ne=0),Y(F,r(h),n),i.reversed&&h.reverse(),i.paused&&h.paused(!0),(O||!b&&!S&&h._start===x(F._time)&&u(O)&&function t(e){return!e||e._ts&&t(e.parent)}(r(h))&&"nested"!==F.data)&&(h._tTime=-Xt,h.render(Math.max(0,-M))),R&&U(r(h),R),h}e(n,t);var a=n.prototype;return a.render=function(t,e,r){var i,n,s,a,o,u,h,f,l,p=this._time,c=this._tDur,_=this._dur,d=c-Xt<t&&0<=t?c:t<Xt?0:t;if(_){if(d!==this._tTime||!t||r||!this._initted&&this._tTime||this._startAt&&this._zTime<0!=t<0){if(i=d,f=this.timeline,this._repeat){if(a=_+this._rDelay,this._repeat<-1&&t<0)return this.totalTime(100*a+t,e,r);if(i=x(d%a),d===c?(s=this._repeat,i=_):((s=~~(d/a))&&s===d/a&&(i=_,s--),_<i&&(i=_)),(u=this._yoyo&&1&s)&&(l=this._yEase,i=_-i),o=ce(this._tTime,a),i===p&&!r&&this._initted)return this;s!==o&&(f&&this._yEase&&ut(f,u),!this.vars.repeatRefresh||u||this._lock||(this._lock=r=1,this.render(x(a*s),!0).invalidate()._lock=0))}if(!this._initted){if(X(this,t<0?t:i,r,e))return this._tTime=0,this;if(_!==this._dur)return this.render(t,e,r)}if(this._tTime=d,this._time=i,!this._act&&this._ts&&(this._act=1,this._lazy=0),this.ratio=h=(l||this._ease)(i/_),this._from&&(this.ratio=h=1-h),i&&!p&&!e&&(xe(this,"onStart"),this._tTime!==d))return this;for(n=this._pt;n;)n.r(h,n.d),n=n._next;f&&f.render(t<0?t:!i&&u?-Xt:f._dur*f._ease(i/this._dur),e,r)||this._startAt&&(this._zTime=t),this._onUpdate&&!e&&(t<0&&this._startAt&&this._startAt.render(t,!0,r),xe(this,"onUpdate")),this._repeat&&s!==o&&this.vars.onRepeat&&!e&&this.parent&&xe(this,"onRepeat"),d!==this._tDur&&d||this._tTime!==d||(t<0&&this._startAt&&!this._onUpdate&&this._startAt.render(t,!0,!0),!t&&_||!(d===this._tDur&&0<this._ts||!d&&this._ts<0)||z(this,1),e||t<0&&!p||!d&&!p||(xe(this,d===c?"onComplete":"onReverseComplete",!0),!this._prom||d<c&&0<this.timeScale()||this._prom()))}}else!function(t,e,r,i){var n,s,a,o=t.ratio,u=e<0||!e&&(!t._start&&function t(e){var r=e.parent;return r&&r._ts&&r._initted&&!r._lock&&(r.rawTime()<0||t(r))}(t)&&(t._initted||!_e(t))||(t._ts<0||t._dp._ts<0)&&!_e(t))?0:1,h=t._rDelay,f=0;if(h&&t._repeat&&(f=ge(0,t._tDur,e),s=ce(f,h),t._yoyo&&1&s&&(u=1-u),s!==ce(t._tTime,h)&&(o=1-u,t.vars.repeatRefresh&&t._initted&&t.invalidate())),u!==o||i||t._zTime===Xt||!e&&t._zTime){if(!t._initted&&X(t,e,i,r))return;for(a=t._zTime,t._zTime=e||(r?Xt:0),r=r||e&&!a,t.ratio=u,t._from&&(u=1-u),t._time=0,t._tTime=f,n=t._pt;n;)n.r(u,n.d),n=n._next;t._startAt&&e<0&&t._startAt.render(e,!0,!0),t._onUpdate&&!r&&xe(t,"onUpdate"),f&&t._repeat&&!r&&t.parent&&xe(t,"onRepeat"),(e>=t._tDur||e<0)&&t.ratio===u&&(u&&z(t,1),r||(xe(t,u?"onComplete":"onReverseComplete",!0),t._prom&&t._prom()))}else t._zTime||(t._zTime=e)}(this,t,e,r);return this},a.targets=function(){return this._targets},a.invalidate=function(){return this._pt=this._op=this._startAt=this._onUpdate=this._lazy=this.ratio=0,this._ptLookup=[],this.timeline&&this.timeline.invalidate(),t.prototype.invalidate.call(this)},a.kill=function(t,e){if(void 0===e&&(e="all"),!(t||e&&"all"!==e))return this._lazy=this._pt=0,this.parent?rt(this):this;if(this.timeline){var r=this.timeline.totalDuration();return this.timeline.killTweensOf(t,e,Ne&&!0!==Ne.vars.overwrite)._first||rt(this),this.parent&&r!==this.timeline.totalDuration()&&N(this,this._dur*this.timeline._tDur/r,0,1),this}var n,s,a,o,u,h,f,l=this._targets,p=t?ye(t):l,c=this._ptLookup,_=this._pt;if((!e||"all"===e)&&function(t,e){for(var r=t.length,i=r===e.length;i&&r--&&t[r]===e[r];);return r<0}(l,p))return"all"===e&&(this._pt=0),rt(this);for(n=this._op=this._op||[],"all"!==e&&(i(e)&&(u={},y(e,(function(t){return u[t]=1})),e=u),e=function(t,e){var r,i,n,s,a=t[0]?g(t[0]).harness:0,o=a&&a.aliases;if(!o)return e;for(i in r=pe({},e),o)if(i in r)for(n=(s=o[i].split(",")).length;n--;)r[s[n]]=r[i];return r}(l,e)),f=l.length;f--;)if(~p.indexOf(l[f]))for(u in s=c[f],"all"===e?(n[f]=e,o=s,a={}):(a=n[f]=n[f]||{},o=e),o)(h=s&&s[u])&&("kill"in h.d&&!0!==h.d.kill(u)||S(this,h,"_pt"),delete s[u]),"all"!==a&&(a[u]=1);return this._initted&&!this._pt&&_&&rt(this),this},n.to=function(t,e,r){return new n(t,e,r)},n.from=function(t,e){return V(1,arguments)},n.delayedCall=function(t,e,r,i){return new n(e,0,{immediateRender:!1,lazy:!1,overwrite:!1,delay:t,onComplete:e,onReverseComplete:e,onCompleteParams:r,onReverseCompleteParams:r,callbackScope:i})},n.fromTo=function(t,e,r){return V(2,arguments)},n.set=function(t,e){return e.duration=0,e.repeatDelay||(e.repeat=0),new n(t,e)},n.killTweensOf=function(t,e,r){return _t.killTweensOf(t,e,r)},n}(Ie);function We(t,e,r){return t.setAttribute(e,r)}function He(t,e,r,i){i.mSet(t,e,i.m.call(i.tween,r,i.mt),i)}A(Ge.prototype,{_targets:[],_lazy:0,_startAt:0,_op:0,_onInit:0}),y("staggerTo,staggerFrom,staggerFromTo",(function(t){Ge[t]=function(){var e=new Ye,r=ve.call(arguments,0);return r.splice("staggerFromTo"===t?5:4,0,0),e[t].apply(e,r)}}));var Ze=function(t,e,r){return t[e]=r},$e=function(t,e,r){return t[e](r)},Je=function(t,e,r,i){return t[e](i.fp,r)},Ke=function(t,e){return n(t[e])?$e:a(t[e])&&t.setAttribute?We:Ze},tr=function(t,e){return e.set(e.t,e.p,Math.round(1e6*(e.s+e.c*t))/1e6,e)},er=function(t,e){return e.set(e.t,e.p,!!(e.s+e.c*t),e)},rr=function(t,e){var r=e._pt,i="";if(!t&&e.b)i=e.b;else if(1===t&&e.e)i=e.e;else{for(;r;)i=r.p+(r.m?r.m(r.s+r.c*t):Math.round(1e4*(r.s+r.c*t))/1e4)+i,r=r._next;i+=e.c}e.set(e.t,e.p,i,e)},ir=function(t,e){for(var r=e._pt;r;)r.r(t,r.d),r=r._next},nr=function(t,e,r,i){for(var n,s=this._pt;s;)n=s._next,s.p===i&&s.modifier(t,e,r),s=n},sr=function(t){for(var e,r,i=this._pt;i;)r=i._next,i.p===t&&!i.op||i.op===t?S(this,i,"_pt"):i.dep||(e=1),i=r;return!e},ar=function(t){for(var e,r,i,n,s=t._pt;s;){for(e=s._next,r=i;r&&r.pr>s.pr;)r=r._next;(s._prev=r?r._prev:n)?s._prev._next=s:i=s,(s._next=r)?r._prev=s:n=s,s=e}t._pt=i},or=(ur.prototype.modifier=function(t,e,r){this.mSet=this.mSet||this.set,this.set=He,this.m=t,this.mt=r,this.tween=e},ur);function ur(t,e,r,i,n,s,a,o,u){this.t=e,this.s=i,this.c=n,this.p=r,this.r=s||tr,this.d=a||this,this.set=o||Ze,this.pr=u||0,(this._next=t)&&(t._prev=this)}y(le+"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",(function(t){return ne[t]=1})),ie.TweenMax=ie.TweenLite=Ge,ie.TimelineLite=ie.TimelineMax=Ye,_t=new Ye({sortChildren:!1,defaults:Yt,autoRemoveChildren:!0,id:"root",smoothChildTiming:!0}),Lt.stringFilter=ot;var hr={registerPlugin:function(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];e.forEach((function(t){return function(t){var e=(t=!t.name&&t.default||t).name,r=n(t),i=e&&!r&&t.init?function(){this._props=[]}:t,s={init:d,render:ir,add:qe,kill:sr,modifier:nr,rawVars:0},a={targetTest:0,get:0,getSetter:Ke,aliases:{},register:0};if(Ae(),t!==i){if(oe[e])return;A(i,A(D(t,s),a)),pe(i.prototype,pe(s,D(t,a))),oe[i.prop=e]=i,t.targetTest&&(fe.push(i),ne[e]=1),e=("css"===e?"CSS":e.charAt(0).toUpperCase()+e.substr(1))+"Plugin"}_(e,i),t.register&&t.register(pr,i,or)}(t)}))},timeline:function(t){return new Ye(t)},getTweensOf:function(t,e){return _t.getTweensOf(t,e)},getProperty:function(t,e,r,n){i(t)&&(t=ye(t)[0]);var s=g(t||{}).get,a=r?k:O;return"native"===r&&(r=""),t?e?a((oe[e]&&oe[e].get||s)(t,e,r,n)):function(e,r,i){return a((oe[e]&&oe[e].get||s)(t,e,r,i))}:t},quickSetter:function(t,e,r){if(1<(t=ye(t)).length){var i=t.map((function(t){return pr.quickSetter(t,e,r)})),n=i.length;return function(t){for(var e=n;e--;)i[e](t)}}t=t[0]||{};var s=oe[e],a=g(t),o=a.harness&&(a.harness.aliases||{})[e]||e,u=s?function(e){var i=new s;xt._pt=0,i.init(t,r?e+r:e,xt,0,[t]),i.render(1,i),xt._pt&&ir(1,xt)}:a.set(t,o);return s?u:function(e){return u(t,o,r?e+r:e,a,1)}},isTweening:function(t){return 0<_t.getTweensOf(t,!0).length},defaults:function(t){return t&&t.ease&&(t.ease=ze(t.ease,Yt.ease)),C(Yt,t||{})},config:function(t){return C(Lt,t||{})},registerEffect:function(t){var e=t.name,r=t.effect,i=t.plugins,n=t.defaults,s=t.extendTimeline;(i||"").split(",").forEach((function(t){return t&&!oe[t]&&!ie[t]&&c(e+" effect requires "+t+" plugin.")})),ue[e]=function(t,e,i){return r(ye(t),A(e||{},n),i)},s&&(Ye.prototype[e]=function(t,r,i){return this.add(ue[e](t,o(r)?r:(i=r)&&{},this),i)})},registerEase:function(t,e){Ce[t]=ze(e)},parseEase:function(t,e){return arguments.length?ze(t,e):Ce},getById:function(t){return _t.getById(t)},exportRoot:function(t,e){void 0===t&&(t={});var r,i,n=new Ye(t);for(n.smoothChildTiming=u(t.smoothChildTiming),_t.remove(n),n._dp=0,n._time=n._tTime=_t._time,r=_t._first;r;)i=r._next,!e&&!r._dur&&r instanceof Ge&&r.vars.onComplete===r._targets[0]||Y(n,r,r._start-r._delay),r=i;return Y(_t,n,0),n},utils:{wrap:function t(e,r,i){var n=r-e;return Ht(e)?K(e,t(0,e.length),r):j(i,(function(t){return(n+(t-e)%n)%n+e}))},wrapYoyo:function t(e,r,i){var n=r-e,s=2*n;return Ht(e)?K(e,t(0,e.length-1),r):j(i,(function(t){return e+(n<(t=(s+(t-e)%s)%s||0)?s-t:t)}))},distribute:H,random:J,snap:$,normalize:function(t,e,r){return Te(t,e,0,1,r)},getUnit:Q,clamp:function(t,e,r){return j(r,(function(r){return ge(t,e,r)}))},splitColor:nt,toArray:ye,selector:function(t){return t=ye(t)[0]||c("Invalid scope")||{},function(e){var r=t.current||t.nativeElement||t;return ye(e,r.querySelectorAll?r:r===t?c("Invalid scope")||gt.createElement("div"):t)}},mapRange:Te,pipe:function(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return function(t){return e.reduce((function(t,e){return e(t)}),t)}},unitize:function(t,e){return function(r){return t(parseFloat(r))+(e||Q(r))}},interpolate:function t(e,r,n,s){var a=isNaN(e+r)?0:function(t){return(1-t)*e+t*r};if(!a){var o,u,h,f,l,p=i(e),c={};if(!0===n&&(s=1)&&(n=null),p)e={p:e},r={p:r};else if(Ht(e)&&!Ht(r)){for(h=[],f=e.length,l=f-2,u=1;u<f;u++)h.push(t(e[u-1],e[u]));f--,a=function(t){t*=f;var e=Math.min(l,~~t);return h[e](t-e)},n=r}else s||(e=pe(Ht(e)?[]:{},e));if(!h){for(o in r)qe.call(c,e,o,"get",r[o]);a=function(t){return ir(t,c)||(p?e.p:e)}}}return j(n,a)},shuffle:W},install:l,effects:ue,ticker:ke,updateRoot:Ye.updateRoot,plugins:oe,globalTimeline:_t,core:{PropTween:or,globals:_,Tween:Ge,Timeline:Ye,Animation:Ie,getCache:g,_removeLinkedListItem:S,suppressOverwrites:function(t){return ct=t}}};function fr(t,e){for(var r=t._pt;r&&r.p!==e&&r.op!==e&&r.fp!==e;)r=r._next;return r}function lr(t,e){return{name:t,rawVars:1,init:function(t,r,n){n._onInit=function(t){var n,s;if(i(r)&&(n={},y(r,(function(t){return n[t]=1})),r=n),e){for(s in n={},r)n[s]=e(r[s]);r=n}!function(t,e){var r,i,n,s=t._targets;for(r in e)for(i=s.length;i--;)(n=(n=t._ptLookup[i][r])&&n.d)&&(n._pt&&(n=fr(n,r)),n&&n.modifier&&n.modifier(e[r],t,s[i],r))}(t,r)}}}}y("to,from,fromTo,delayedCall,set,killTweensOf",(function(t){return hr[t]=Ge[t]})),ke.add(Ye.updateRoot),xt=hr.to({},{duration:0});var pr=hr.registerPlugin({name:"attr",init:function(t,e,r,i,n){var s,a;for(s in e)(a=this.add(t,"setAttribute",(t.getAttribute(s)||0)+"",e[s],i,n,0,0,s))&&(a.op=s),this._props.push(s)}},{name:"endArray",init:function(t,e){for(var r=e.length;r--;)this.add(t,r,t[r]||0,e[r])}},lr("roundProps",Z),lr("modifiers"),lr("snap",$))||hr;function cr(t,e){return e.set(e.t,e.p,Math.round(1e4*(e.s+e.c*t))/1e4+e.u,e)}function _r(t,e){return e.set(e.t,e.p,1===t?e.e:Math.round(1e4*(e.s+e.c*t))/1e4+e.u,e)}function dr(t,e){return e.set(e.t,e.p,t?Math.round(1e4*(e.s+e.c*t))/1e4+e.u:e.b,e)}function mr(t,e){var r=e.s+e.c*t;e.set(e.t,e.p,~~(r+(r<0?-.5:.5))+e.u,e)}function gr(t,e){return e.set(e.t,e.p,t?e.e:e.b,e)}function vr(t,e){return e.set(e.t,e.p,1!==t?e.b:e.e,e)}function yr(t,e,r){return t.style[e]=r}function Tr(t,e,r){return t.style.setProperty(e,r)}function xr(t,e,r){return t._gsap[e]=r}function wr(t,e,r){return t._gsap.scaleX=t._gsap.scaleY=r}function br(t,e,r,i,n){var s=t._gsap;s.scaleX=s.scaleY=r,s.renderTransform(n,s)}function Mr(t,e,r,i,n){var s=t._gsap;s[e]=r,s.renderTransform(n,s)}function Or(t,e){var r=Qr.createElementNS?Qr.createElementNS((e||"http://www.w3.org/1999/xhtml").replace(/^https/,"http"),t):Qr.createElement(t);return r.style?r:Qr.createElement(t)}function kr(t,e,r){var i=getComputedStyle(t);return i[e]||i.getPropertyValue(e.replace(Ti,"-$1").toLowerCase())||i.getPropertyValue(e)||!r&&kr(t,Ai(e)||e,1)||""}function Ar(){"undefined"!=typeof window&&window.document&&(jr=window,Qr=jr.document,Gr=Qr.documentElement,Hr=Or("div")||{style:{}},Or("div"),Mi=Ai(Mi),Oi=Mi+"Origin",Hr.style.cssText="border-width:0;line-height:0;position:absolute;padding:0",$r=!!Ai("perspective"),Wr=1)}function Cr(t){var e,r=Or("svg",this.ownerSVGElement&&this.ownerSVGElement.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),i=this.parentNode,n=this.nextSibling,s=this.style.cssText;if(Gr.appendChild(r),r.appendChild(this),this.style.display="block",t)try{e=this.getBBox(),this._gsapBBox=this.getBBox,this.getBBox=Cr}catch(t){}else this._gsapBBox&&(e=this._gsapBBox());return i&&(n?i.insertBefore(this,n):i.appendChild(this)),Gr.removeChild(r),this.style.cssText=s,e}function Dr(t,e){for(var r=e.length;r--;)if(t.hasAttribute(e[r]))return t.getAttribute(e[r])}function Pr(t){var e;try{e=t.getBBox()}catch(r){e=Cr.call(t,!0)}return e&&(e.width||e.height)||t.getBBox===Cr||(e=Cr.call(t,!0)),!e||e.width||e.x||e.y?e:{x:+Dr(t,["x","cx","x1"])||0,y:+Dr(t,["y","cy","y1"])||0,width:0,height:0}}function Sr(t){return!(!t.getCTM||t.parentNode&&!t.ownerSVGElement||!Pr(t))}function zr(t,e){if(e){var r=t.style;e in mi&&e!==Oi&&(e=Mi),r.removeProperty?("ms"!==e.substr(0,2)&&"webkit"!==e.substr(0,6)||(e="-"+e),r.removeProperty(e.replace(Ti,"-$1").toLowerCase())):r.removeAttribute(e)}}function Rr(t,e,r,i,n,s){var a=new or(t._pt,e,r,0,1,s?vr:gr);return(t._pt=a).b=i,a.e=n,t._props.push(r),a}function Er(t,e,r,i){var n,s,a,o,u=parseFloat(r)||0,h=(r+"").trim().substr((u+"").length)||"px",f=Hr.style,l=xi.test(e),p="svg"===t.tagName.toLowerCase(),c=(p?"client":"offset")+(l?"Width":"Height"),_="px"===i,d="%"===i;return i===h||!u||Ci[i]||Ci[h]?u:("px"===h||_||(u=Er(t,e,r,"px")),o=t.getCTM&&Sr(t),!d&&"%"!==h||!mi[e]&&!~e.indexOf("adius")?(f[l?"width":"height"]=100+(_?h:i),s=~e.indexOf("adius")||"em"===i&&t.appendChild&&!p?t:t.parentNode,o&&(s=(t.ownerSVGElement||{}).parentNode),s&&s!==Qr&&s.appendChild||(s=Qr.body),(a=s._gsap)&&d&&a.width&&l&&a.time===ke.time?T(u/a.width*100):(!d&&"%"!==h||(f.position=kr(t,"position")),s===t&&(f.position="static"),s.appendChild(Hr),n=Hr[c],s.removeChild(Hr),f.position="absolute",l&&d&&((a=g(s)).time=ke.time,a.width=s[c]),T(_?n*u/100:n&&u?100/n*u:0))):(n=o?t.getBBox()[l?"width":"height"]:t[c],T(d?u/n*100:u/100*n)))}function Fr(t,e,r,i){var n;return Wr||Ar(),e in bi&&"transform"!==e&&~(e=bi[e]).indexOf(",")&&(e=e.split(",")[0]),mi[e]&&"transform"!==e?(n=Ri(t,i),n="transformOrigin"!==e?n[e]:n.svg?n.origin:Ei(kr(t,Oi))+" "+n.zOrigin+"px"):(n=t.style[e])&&"auto"!==n&&!i&&!~(n+"").indexOf("calc(")||(n=Pi[e]&&Pi[e](t,e,r)||kr(t,e)||v(t,e)||("opacity"===e?1:0)),r&&!~(n+"").trim().indexOf(" ")?Er(t,e,n,r)+r:n}function Br(t,e,r,i){if(!r||"none"===r){var n=Ai(e,t,1),s=n&&kr(t,n,1);s&&s!==r?(e=n,r=s):"borderColor"===e&&(r=kr(t,"borderTopColor"))}var a,o,u,h,f,l,p,c,_,d,m,g,v=new or(this._pt,t.style,e,0,1,rr),y=0,T=0;if(v.b=r,v.e=i,r+="","auto"==(i+="")&&(t.style[e]=i,i=kr(t,e)||i,t.style[e]=r),ot(a=[r,i]),i=a[1],u=(r=a[0]).match(Jt)||[],(i.match(Jt)||[]).length){for(;o=Jt.exec(i);)p=o[0],_=i.substring(y,o.index),f?f=(f+1)%5:"rgba("!==_.substr(-5)&&"hsla("!==_.substr(-5)||(f=1),p!==(l=u[T++]||"")&&(h=parseFloat(l)||0,m=l.substr((h+"").length),(g="="===p.charAt(1)?+(p.charAt(0)+"1"):0)&&(p=p.substr(2)),c=parseFloat(p),d=p.substr((c+"").length),y=Jt.lastIndex-d.length,d||(d=d||Lt.units[e]||m,y===i.length&&(i+=d,v.e+=d)),m!==d&&(h=Er(t,e,l,d)||0),v._pt={_next:v._pt,p:_||1===T?_:",",s:h,c:g?g*c:c-h,m:f&&f<4||"zIndex"===e?Math.round:0});v.c=y<i.length?i.substring(y,i.length):""}else v.r="display"===e&&"none"===i?vr:gr;return te.test(i)&&(v.e=0),this._pt=v}function Ir(t,e){if(e.tween&&e.tween._time===e.tween._dur){var r,i,n,s=e.t,a=s.style,o=e.u,u=s._gsap;if("all"===o||!0===o)a.cssText="",i=1;else for(n=(o=o.split(",")).length;-1<--n;)r=o[n],mi[r]&&(i=1,r="transformOrigin"===r?Oi:Mi),zr(s,r);i&&(zr(s,Mi),u&&(u.svg&&s.removeAttribute("transform"),Ri(s,1),u.uncache=1))}}function Lr(t){return"matrix(1, 0, 0, 1, 0, 0)"===t||"none"===t||!t}function Yr(t){var e=kr(t,Mi);return Lr(e)?Si:e.substr(7).match($t).map(T)}function Ur(t,e){var r,i,n,s,a=t._gsap||g(t),o=t.style,u=Yr(t);return a.svg&&t.getAttribute("transform")?"1,0,0,1,0,0"===(u=[(n=t.transform.baseVal.consolidate().matrix).a,n.b,n.c,n.d,n.e,n.f]).join(",")?Si:u:(u!==Si||t.offsetParent||t===Gr||a.svg||(n=o.display,o.display="block",(r=t.parentNode)&&t.offsetParent||(s=1,i=t.nextSibling,Gr.appendChild(t)),u=Yr(t),n?o.display=n:zr(t,"display"),s&&(i?r.insertBefore(t,i):r?r.appendChild(t):Gr.removeChild(t))),e&&6<u.length?[u[0],u[1],u[4],u[5],u[12],u[13]]:u)}function Xr(t,e,r,i,n,s){var a,o,u,h=t._gsap,f=n||Ur(t,!0),l=h.xOrigin||0,p=h.yOrigin||0,c=h.xOffset||0,_=h.yOffset||0,d=f[0],m=f[1],g=f[2],v=f[3],y=f[4],T=f[5],x=e.split(" "),w=parseFloat(x[0])||0,b=parseFloat(x[1])||0;r?f!==Si&&(o=d*v-m*g)&&(u=w*(-m/o)+b*(d/o)-(d*T-m*y)/o,w=w*(v/o)+b*(-g/o)+(g*T-v*y)/o,b=u):(w=(a=Pr(t)).x+(~x[0].indexOf("%")?w/100*a.width:w),b=a.y+(~(x[1]||x[0]).indexOf("%")?b/100*a.height:b)),i||!1!==i&&h.smooth?(y=w-l,T=b-p,h.xOffset=c+(y*d+T*g)-y,h.yOffset=_+(y*m+T*v)-T):h.xOffset=h.yOffset=0,h.xOrigin=w,h.yOrigin=b,h.smooth=!!i,h.origin=e,h.originIsAbsolute=!!r,t.style[Oi]="0px 0px",s&&(Rr(s,h,"xOrigin",l,w),Rr(s,h,"yOrigin",p,b),Rr(s,h,"xOffset",c,h.xOffset),Rr(s,h,"yOffset",_,h.yOffset)),t.setAttribute("data-svg-origin",w+" "+b)}function Nr(t,e,r){var i=Q(e);return T(parseFloat(e)+parseFloat(Er(t,"x",r+"px",i)))+i}function qr(t,e){for(var r in e)t[r]=e[r];return t}function Vr(t,e,r){var i,n,s,a,o,u,h,f=qr({},r._gsap),l=r.style;for(n in f.svg?(s=r.getAttribute("transform"),r.setAttribute("transform",""),l[Mi]=e,i=Ri(r,1),zr(r,Mi),r.setAttribute("transform",s)):(s=getComputedStyle(r)[Mi],l[Mi]=e,i=Ri(r,1),l[Mi]=s),mi)(s=f[n])!==(a=i[n])&&"perspective,force3D,transformOrigin,svgOrigin".indexOf(n)<0&&(o=Q(s)!==(h=Q(a))?Er(r,n,s,h):parseFloat(s),u=parseFloat(a),t._pt=new or(t._pt,i,n,o,u-o,cr),t._pt.u=h||0,t._props.push(n));qr(i,f)}Ge.version=Ye.version=pr.version="3.9.1",yt=1,h()&&Ae();var jr,Qr,Gr,Wr,Hr,Zr,$r,Jr=Ce.Power0,Kr=Ce.Power1,ti=Ce.Power2,ei=Ce.Power3,ri=Ce.Power4,ii=Ce.Linear,ni=Ce.Quad,si=Ce.Cubic,ai=Ce.Quart,oi=Ce.Quint,ui=Ce.Strong,hi=Ce.Elastic,fi=Ce.Back,li=Ce.SteppedEase,pi=Ce.Bounce,ci=Ce.Sine,_i=Ce.Expo,di=Ce.Circ,mi={},gi=180/Math.PI,vi=Math.PI/180,yi=Math.atan2,Ti=/([A-Z])/g,xi=/(?:left|right|width|margin|padding|x)/i,wi=/[\s,\(]\S/,bi={autoAlpha:"opacity,visibility",scale:"scaleX,scaleY",alpha:"opacity"},Mi="transform",Oi=Mi+"Origin",ki="O,Moz,ms,Ms,Webkit".split(","),Ai=function(t,e,r){var i=(e||Hr).style,n=5;if(t in i&&!r)return t;for(t=t.charAt(0).toUpperCase()+t.substr(1);n--&&!(ki[n]+t in i););return n<0?null:(3===n?"ms":0<=n?ki[n]:"")+t},Ci={deg:1,rad:1,turn:1},Di={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"},Pi={clearProps:function(t,e,r,i,n){if("isFromStart"!==n.data){var s=t._pt=new or(t._pt,e,r,0,0,Ir);return s.u=i,s.pr=-10,s.tween=n,t._props.push(r),1}}},Si=[1,0,0,1,0,0],zi={},Ri=function(t,e){var r=t._gsap||new Be(t);if("x"in r&&!e&&!r.uncache)return r;var i,n,s,a,o,u,h,f,l,p,c,_,d,m,g,v,y,x,w,b,M,O,k,A,C,D,P,S,z,R,E,F,B=t.style,I=r.scaleX<0,L="deg",Y=kr(t,Oi)||"0";return i=n=s=u=h=f=l=p=c=0,a=o=1,r.svg=!(!t.getCTM||!Sr(t)),m=Ur(t,r.svg),r.svg&&(A=(!r.uncache||"0px 0px"===Y)&&!e&&t.getAttribute("data-svg-origin"),Xr(t,A||Y,!!A||r.originIsAbsolute,!1!==r.smooth,m)),_=r.xOrigin||0,d=r.yOrigin||0,m!==Si&&(x=m[0],w=m[1],b=m[2],M=m[3],i=O=m[4],n=k=m[5],6===m.length?(a=Math.sqrt(x*x+w*w),o=Math.sqrt(M*M+b*b),u=x||w?yi(w,x)*gi:0,(l=b||M?yi(b,M)*gi+u:0)&&(o*=Math.abs(Math.cos(l*vi))),r.svg&&(i-=_-(_*x+d*b),n-=d-(_*w+d*M))):(F=m[6],R=m[7],P=m[8],S=m[9],z=m[10],E=m[11],i=m[12],n=m[13],s=m[14],h=(g=yi(F,z))*gi,g&&(A=O*(v=Math.cos(-g))+P*(y=Math.sin(-g)),C=k*v+S*y,D=F*v+z*y,P=O*-y+P*v,S=k*-y+S*v,z=F*-y+z*v,E=R*-y+E*v,O=A,k=C,F=D),f=(g=yi(-b,z))*gi,g&&(v=Math.cos(-g),E=M*(y=Math.sin(-g))+E*v,x=A=x*v-P*y,w=C=w*v-S*y,b=D=b*v-z*y),u=(g=yi(w,x))*gi,g&&(A=x*(v=Math.cos(g))+w*(y=Math.sin(g)),C=O*v+k*y,w=w*v-x*y,k=k*v-O*y,x=A,O=C),h&&359.9<Math.abs(h)+Math.abs(u)&&(h=u=0,f=180-f),a=T(Math.sqrt(x*x+w*w+b*b)),o=T(Math.sqrt(k*k+F*F)),g=yi(O,k),l=2e-4<Math.abs(g)?g*gi:0,c=E?1/(E<0?-E:E):0),r.svg&&(A=t.getAttribute("transform"),r.forceCSS=t.setAttribute("transform","")||!Lr(kr(t,Mi)),A&&t.setAttribute("transform",A))),90<Math.abs(l)&&Math.abs(l)<270&&(I?(a*=-1,l+=u<=0?180:-180,u+=u<=0?180:-180):(o*=-1,l+=l<=0?180:-180)),r.x=i-((r.xPercent=i&&(r.xPercent||(Math.round(t.offsetWidth/2)===Math.round(-i)?-50:0)))?t.offsetWidth*r.xPercent/100:0)+"px",r.y=n-((r.yPercent=n&&(r.yPercent||(Math.round(t.offsetHeight/2)===Math.round(-n)?-50:0)))?t.offsetHeight*r.yPercent/100:0)+"px",r.z=s+"px",r.scaleX=T(a),r.scaleY=T(o),r.rotation=T(u)+L,r.rotationX=T(h)+L,r.rotationY=T(f)+L,r.skewX=l+L,r.skewY=p+L,r.transformPerspective=c+"px",(r.zOrigin=parseFloat(Y.split(" ")[2])||0)&&(B[Oi]=Ei(Y)),r.xOffset=r.yOffset=0,r.force3D=Lt.force3D,r.renderTransform=r.svg?Ui:$r?Yi:Fi,r.uncache=0,r},Ei=function(t){return(t=t.split(" "))[0]+" "+t[1]},Fi=function(t,e){e.z="0px",e.rotationY=e.rotationX="0deg",e.force3D=0,Yi(t,e)},Bi="0deg",Ii="0px",Li=") ",Yi=function(t,e){var r=e||this,i=r.xPercent,n=r.yPercent,s=r.x,a=r.y,o=r.z,u=r.rotation,h=r.rotationY,f=r.rotationX,l=r.skewX,p=r.skewY,c=r.scaleX,_=r.scaleY,d=r.transformPerspective,m=r.force3D,g=r.target,v=r.zOrigin,y="",T="auto"===m&&t&&1!==t||!0===m;if(v&&(f!==Bi||h!==Bi)){var x,w=parseFloat(h)*vi,b=Math.sin(w),M=Math.cos(w);w=parseFloat(f)*vi,s=Nr(g,s,b*(x=Math.cos(w))*-v),a=Nr(g,a,-Math.sin(w)*-v),o=Nr(g,o,M*x*-v+v)}d!==Ii&&(y+="perspective("+d+Li),(i||n)&&(y+="translate("+i+"%, "+n+"%) "),!T&&s===Ii&&a===Ii&&o===Ii||(y+=o!==Ii||T?"translate3d("+s+", "+a+", "+o+") ":"translate("+s+", "+a+Li),u!==Bi&&(y+="rotate("+u+Li),h!==Bi&&(y+="rotateY("+h+Li),f!==Bi&&(y+="rotateX("+f+Li),l===Bi&&p===Bi||(y+="skew("+l+", "+p+Li),1===c&&1===_||(y+="scale("+c+", "+_+Li),g.style[Mi]=y||"translate(0, 0)"},Ui=function(t,e){var r,i,n,s,a,o=e||this,u=o.xPercent,h=o.yPercent,f=o.x,l=o.y,p=o.rotation,c=o.skewX,_=o.skewY,d=o.scaleX,m=o.scaleY,g=o.target,v=o.xOrigin,y=o.yOrigin,x=o.xOffset,w=o.yOffset,b=o.forceCSS,M=parseFloat(f),O=parseFloat(l);p=parseFloat(p),c=parseFloat(c),(_=parseFloat(_))&&(c+=_=parseFloat(_),p+=_),p||c?(p*=vi,c*=vi,r=Math.cos(p)*d,i=Math.sin(p)*d,n=Math.sin(p-c)*-m,s=Math.cos(p-c)*m,c&&(_*=vi,a=Math.tan(c-_),n*=a=Math.sqrt(1+a*a),s*=a,_&&(a=Math.tan(_),r*=a=Math.sqrt(1+a*a),i*=a)),r=T(r),i=T(i),n=T(n),s=T(s)):(r=d,s=m,i=n=0),(M&&!~(f+"").indexOf("px")||O&&!~(l+"").indexOf("px"))&&(M=Er(g,"x",f,"px"),O=Er(g,"y",l,"px")),(v||y||x||w)&&(M=T(M+v-(v*r+y*n)+x),O=T(O+y-(v*i+y*s)+w)),(u||h)&&(M=T(M+u/100*(a=g.getBBox()).width),O=T(O+h/100*a.height)),a="matrix("+r+","+i+","+n+","+s+","+M+","+O+")",g.setAttribute("transform",a),b&&(g.style[Mi]=a)};y("padding,margin,Width,Radius",(function(t,e){var r="Right",i="Bottom",n="Left",s=(e<3?["Top",r,i,n]:["Top"+n,"Top"+r,i+r,i+n]).map((function(r){return e<2?t+r:"border"+r+t}));Pi[1<e?"border"+t:t]=function(t,e,r,i,n){var a,o;if(arguments.length<4)return a=s.map((function(e){return Fr(t,e,r)})),5===(o=a.join(" ")).split(a[0]).length?a[0]:o;a=(i+"").split(" "),o={},s.forEach((function(t,e){return o[t]=a[e]=a[e]||a[(e-1)/2|0]})),t.init(e,o,n)}}));var Xi,Ni,qi={name:"css",register:Ar,targetTest:function(t){return t.style&&t.nodeType},init:function(t,e,r,n,s){var a,o,u,h,f,l,c,_,d,m,g,v,y,T,x,w,b,M,O,k,A,C,D,P,S,z,R,E,F,B,I,L,Y=this._props,U=t.style,X=r.vars.startAt;for(c in Wr||Ar(),e)if("autoRound"!==c&&(o=e[c],!oe[c]||!Ue(c,e,r,n,t,s)))if(f=typeof o,l=Pi[c],"function"===f&&(f=typeof(o=o.call(r,n,t,s))),"string"===f&&~o.indexOf("random(")&&(o=tt(o)),l)l(this,t,c,o,r)&&(x=1);else if("--"===c.substr(0,2))a=(getComputedStyle(t).getPropertyValue(c)+"").trim(),o+="",Me.lastIndex=0,Me.test(a)||(_=Q(a),d=Q(o)),d?_!==d&&(a=Er(t,c,a,d)+d):_&&(o+=_),this.add(U,"setProperty",a,o,n,s,0,0,c),Y.push(c);else if("undefined"!==f){if(X&&c in X?(i(a="function"==typeof X[c]?X[c].call(r,n,t,s):X[c])&&~a.indexOf("random(")&&(a=tt(a)),Q(a+"")||(a+=Lt.units[c]||Q(Fr(t,c))||""),"="===(a+"").charAt(1)&&(a=Fr(t,c))):a=Fr(t,c),h=parseFloat(a),(m="string"===f&&"="===o.charAt(1)?+(o.charAt(0)+"1"):0)&&(o=o.substr(2)),u=parseFloat(o),c in bi&&("autoAlpha"===c&&(1===h&&"hidden"===Fr(t,"visibility")&&u&&(h=0),Rr(this,U,"visibility",h?"inherit":"hidden",u?"inherit":"hidden",!u)),"scale"!==c&&"transform"!==c&&~(c=bi[c]).indexOf(",")&&(c=c.split(",")[0])),g=c in mi)if(v||((y=t._gsap).renderTransform&&!e.parseTransform||Ri(t,e.parseTransform),T=!1!==e.smoothOrigin&&y.smooth,(v=this._pt=new or(this._pt,U,Mi,0,1,y.renderTransform,y,0,-1)).dep=1),"scale"===c)this._pt=new or(this._pt,y,"scaleY",y.scaleY,(m?m*u:u-y.scaleY)||0),Y.push("scaleY",c),c+="X";else{if("transformOrigin"===c){L=I=B=void 0,I=(B=(F=o).split(" "))[0],L=B[1]||"50%","top"!==I&&"bottom"!==I&&"left"!==L&&"right"!==L||(F=I,I=L,L=F),B[0]=Di[I]||I,B[1]=Di[L]||L,o=B.join(" "),y.svg?Xr(t,o,0,T,0,this):((d=parseFloat(o.split(" ")[2])||0)!==y.zOrigin&&Rr(this,y,"zOrigin",y.zOrigin,d),Rr(this,U,c,Ei(a),Ei(o)));continue}if("svgOrigin"===c){Xr(t,o,1,T,0,this);continue}if(c in zi){w=this,b=y,M=c,O=h,A=m,R=D=C=void 0,P=360,S=i(k=o),z=parseFloat(k)*(S&&~k.indexOf("rad")?gi:1),E=O+(R=A?z*A:z-O)+"deg",S&&("short"===(C=k.split("_")[1])&&(R%=P)!=R%180&&(R+=R<0?P:-P),"cw"===C&&R<0?R=(R+36e9)%P-~~(R/P)*P:"ccw"===C&&0<R&&(R=(R-36e9)%P-~~(R/P)*P)),w._pt=D=new or(w._pt,b,M,O,R,_r),D.e=E,D.u="deg",w._props.push(M);continue}if("smoothOrigin"===c){Rr(this,y,"smooth",y.smooth,o);continue}if("force3D"===c){y[c]=o;continue}if("transform"===c){Vr(this,o,t);continue}}else c in U||(c=Ai(c)||c);if(g||(u||0===u)&&(h||0===h)&&!wi.test(o)&&c in U)u=u||0,(_=(a+"").substr((h+"").length))!==(d=Q(o)||(c in Lt.units?Lt.units[c]:_))&&(h=Er(t,c,a,d)),this._pt=new or(this._pt,g?y:U,c,h,m?m*u:u-h,g||"px"!==d&&"zIndex"!==c||!1===e.autoRound?cr:mr),this._pt.u=d||0,_!==d&&"%"!==d&&(this._pt.b=a,this._pt.r=dr);else if(c in U)Br.call(this,t,c,a,o);else{if(!(c in t)){p(c,o);continue}this.add(t,c,a||t[c],o,n,s)}Y.push(c)}x&&ar(this)},get:Fr,aliases:bi,getSetter:function(t,e,r){var i=bi[e];return i&&i.indexOf(",")<0&&(e=i),e in mi&&e!==Oi&&(t._gsap.x||Fr(t,"x"))?r&&Zr===r?"scale"===e?wr:xr:(Zr=r||{})&&("scale"===e?br:Mr):t.style&&!a(t.style[e])?yr:~e.indexOf("-")?Tr:Ke(t,e)},core:{_removeProperty:zr,_getMatrix:Ur}};pr.utils.checkPrefix=Ai,Ni=y("x,y,z,scale,scaleX,scaleY,xPercent,yPercent,"+(Xi="rotation,rotationX,rotationY,skewX,skewY")+",transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective",(function(t){mi[t]=1})),y(Xi,(function(t){Lt.units[t]="deg",zi[t]=1})),bi[Ni[13]]="x,y,z,scale,scaleX,scaleY,xPercent,yPercent,"+Xi,y("0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY",(function(t){var e=t.split(":");bi[e[1]]=Ni[e[0]]})),y("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",(function(t){Lt.units[t]="px"})),pr.registerPlugin(qi);var Vi=pr.registerPlugin(qi)||pr,ji=Vi.core.Tween;t.Back=fi,t.Bounce=pi,t.CSSPlugin=qi,t.Circ=di,t.Cubic=si,t.Elastic=hi,t.Expo=_i,t.Linear=ii,t.Power0=Jr,t.Power1=Kr,t.Power2=ti,t.Power3=ei,t.Power4=ri,t.Quad=ni,t.Quart=ai,t.Quint=oi,t.Sine=ci,t.SteppedEase=li,t.Strong=ui,t.TimelineLite=Ye,t.TimelineMax=Ye,t.TweenLite=Ge,t.TweenMax=ji,t.default=Vi,t.gsap=Vi,"undefined"==typeof window||window!==t?Object.defineProperty(t,"__esModule",{value:!0}):delete t.default}))</script><script>function init(){this.createSVG(),this.showDartBoard(this.boardElemArray());const t=document.getElementsByClassName("target");for(let e=0;e<t.length;e++)t[e].addEventListener("click",(t=>{let e=t.target.getAttribute("value");t.target.classList.contains("double")?e*=2:t.target.classList.contains("triple")&&(e*=3),console.log(e)}))}function createPointArray(){const t=this.convertToRad(4.5);let e=[];const i=[this.dartboardWidth/2,this.dartboardHeight/2];return e.push(i),this.DeterminePoint(t,e,300),this.DeterminePoint(t,e,350),this.DeterminePoint(t,e,550),this.DeterminePoint(t,e,600),this.DeterminePoint(t,e,625),e}function convertToRad(t){return Math.PI*t/180}function DeterminePoint(t,e,i){for(let r=0;r<2;r++){let a=[],n=2*i*Math.sin(t)*Math.sin(t),d=2*i*Math.sin(t)*Math.cos(t);a=0===r?[this.dartboardWidth/2+d,this.dartboardHeight/2-i+n]:[this.dartboardWidth/2-d,this.dartboardHeight/2-i+n],e.push(a)}}function createSVG(){const t=this.createPointArray(),e=this.addAttributes("svg",[["viewBox",`0 0 ${this.dartboardWidth} ${this.dartboardHeight}`],["width","100%"],["height","100%"],["id","dartboard"]]),i=this.addAttributes("circle",[["cx",String(this.dartboardWidth/2)],["cy",String(this.dartboardHeight/2)],["r",String(this.dartboardWidth/2)],["fill","black"],["id","zero"],["value","0"]]);i.classList.add("target");const r=this.addAttributes("text",[]),a=[20,17,2,15,10,6,13,4,18,1,3,19,7,16,8,11,14,9,12,5];let n;e.appendChild(i);let d=[`M${t[0][0]},${t[0][1]}L${t[1][0]},${t[1][1]}A300 300 0 0 0 ${t[2][0]},${t[2][1]}Z`,`M${t[2][0]},${t[2][1]}A300 300 0 0 1 ${t[1][0]},${t[1][1]}L${t[3][0]},${t[3][1]}A350 350 0 0 0 ${t[4][0]},${t[4][1]}Z`,`M${t[4][0]},${t[4][1]}A350 350 0 0 1 ${t[3][0]},${t[3][1]}L${t[5][0]},${t[5][1]}A550 550 0 0 0 ${t[6][0]},${t[6][1]}Z`,`M${t[6][0]},${t[6][1]}A550 550 0 0 1 ${t[5][0]},${t[5][1]}L${t[7][0]},${t[7][1]}A600 600 0 0 0 ${t[8][0]},${t[8][1]}Z`,`M${t[10][0]},${t[10][1]}A625 625 0 0 1${t[9][0]},${t[9][1]}`],o=["inner","triple","outer","double","number"];for(let t=0;t<20;t++)for(let i=0;i<5;i++){n=4===i?"transparent":i%2==0&&t%2==0?"black":i%2!=0&&t%2==0?"red":i%2==0&&0!==t?"beige":"green";const s=this.addAttributes("path",[["d",d[i]],["class",o[i]],["fill",n],["value",String(a[t])]]);if(4===i){s.setAttribute("id",`text${t}`),s.style.opacity="1";const e=this.addAttributes("textPath",[["href",`#text${t}`],["class","elem"],["startOffset","50%"],["text-anchor","middle"]]);e.innerHTML=String(a[t]),r.appendChild(e)}else s.classList.add("target");e.appendChild(s)}e.appendChild(r);const s=this.addAttributes("circle",[["cx",String(this.dartboardWidth/2)],["cy",String(this.dartboardHeight/2)],["r","30"],["fill","red"],["class","target"],["id","dbull"],["value","50"]]),l=this.addAttributes("circle",[["cx",String(this.dartboardWidth/2)],["cy",String(this.dartboardHeight/2)],["r","60"],["fill","green"],["class","target"],["id","sbull"],["value","25"]]);e.appendChild(l),e.appendChild(s),document.getElementById("wrapper").appendChild(e)}function boardElemArray(){return[document.getElementsByClassName("inner"),document.getElementsByClassName("triple"),document.getElementsByClassName("outer"),document.getElementsByClassName("double"),document.getElementsByClassName("number")]}function showDartBoard(t){TweenMax.to("#dbull",1,{opacity:1}),TweenMax.to("#sbull",2,{opacity:1});for(let e=0;e<t.length;e++){const i=t[e],r=i[0].getBBox(),a=`${this.dartboardWidth/2-r.x} ${this.dartboardHeight/2-r.y}`;setTimeout((()=>{this.animationBoard(i,a)}),400*e,i,a)}TweenMax.to("#zero",1,{opacity:1,delay:6})}function animationBoard(t,e){TweenMax.to(t[10],1,{rotation:180,transformOrigin:e,opacity:1});for(let i=1;i<10;i++)TweenMax.to(t[i],1,{rotation:180-18*i,transformOrigin:e,opacity:1,delay:.5*i}),TweenMax.to(t[i+10],1,{rotation:18*i-180,transformOrigin:e,opacity:1,delay:.5*i});TweenMax.to(t[0],1,{rotation:0,transformOrigin:e,opacity:1,delay:5})}function addAttributes(t,e){const i=document.createElementNS("http://www.w3.org/2000/svg",t);for(let t=0;t<e.length;t++)i.setAttribute(e[t][0],e[t][1]);return i}dartboardWidth=1400,dartboardHeight=1400,window.onload=function(){init()}</script></html>";

class Dartboard extends StatefulWidget {
  @override
  State<Dartboard> createState() => _DartboardState();
}

class _DartboardState extends State<Dartboard> {
  InAppWebViewController? webViewController;

  InAppWebViewOptions settings = InAppWebViewOptions();

  @override
  Widget build(BuildContext context) {
    return InAppWebView(
      initialData: InAppWebViewInitialData(data: utf8.decode(base64.decode(dart))),
      onWebViewCreated: (controller) async {
        webViewController = controller;
      },
      onConsoleMessage: (controller, consoleMessage) {
        print(consoleMessage);
      },
    );
  }
}
